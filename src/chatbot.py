#!/usr/bin/env python3
"""
–ö–æ–Ω—Å–æ–ª—å–Ω—ã–π —á–∞—Ç-–±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π.

–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
- –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (RAG)
- –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã (CPU/Memory)
- –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –ú–æ—Å–∫–≤–µ

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python chatbot.py
"""

import sys
import os
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from services.data_service import DataService
from services.llm_service import LLMService
from utils.config import config
from utils.logger import logger


class ChatBot:
    """–ì–ª–∞–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞."""
    
    def __init__(self):
        self.data_service: Optional[DataService] = None
        self.llm_service: Optional[LLMService] = None
        self.initialized = False
    
    def initialize(self) -> bool:
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –±–æ—Ç–∞.
        
        Returns:
            True –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
        """
        try:
            logger.info("–ó–∞–ø—É—Å–∫ —á–∞—Ç-–±–æ—Ç–∞...")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            if not config.validate():
                return False
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
            logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...")
            
            self.data_service = DataService()
            self.data_service.setup_vector_store()
            
            self.llm_service = LLMService(self.data_service)
            
            self.initialized = True
            logger.info("‚úÖ –ß–∞—Ç-–±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
            return True
            
        except Exception as e:
            logger.error_occurred(e, "–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞")
            return False
    
    def run(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã —á–∞—Ç-–±–æ—Ç–∞."""
        
        if not self.initialized:
            if not self.initialize():
                print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                return
        
        self._print_welcome()
        
        try:
            while True:
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    user_input = input("\nüë§ –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
                    if user_input.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥', '—Å—Ç–æ–ø']:
                        self._print_goodbye()
                        break
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Å—Ç–æ–π –≤–≤–æ–¥
                    if not user_input:
                        continue
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
                    print("\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...")
                    response = self.llm_service.process_query(user_input)
                    
                    # –í—ã–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç
                    print(f"\n–û—Ç–≤–µ—Ç:\n{response}")
                    
                except KeyboardInterrupt:
                    self._print_goodbye()
                    break
                except Exception as e:
                    logger.error_occurred(e, "–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞")
                    print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
                    print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
                    
        except Exception as e:
            logger.error_occurred(e, "–≥–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª")
            print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
    
    def _print_welcome(self):
        """–í—ã–≤–æ–¥–∏—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        print("\n" + "="*60)
        print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —á–∞—Ç-–±–æ—Ç–∞!")
        print("="*60)
        print("\n–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å:")
        print("–ü–æ–∏—Å–∫–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")
        print("–ü–æ–ª—É—á–µ–Ω–∏–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã (CPU/Memory)")
        print("üïê –¢–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –≤ –ú–æ—Å–∫–≤–µ")
        print("\n–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
        print("‚Ä¢ '–ù–∞–π–¥–∏ –Ω–æ–≤–æ—Å—Ç–∏ –æ –°–±–µ—Ä–±–∞–Ω–∫–µ'")
        print("‚Ä¢ '–ö–∞–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞?'")
        print("‚Ä¢ '–°–∫–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –≤—Ä–µ–º–µ–Ω–∏ –≤ –ú–æ—Å–∫–≤–µ?'")
        print("\n–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: exit, quit, –≤—ã—Ö–æ–¥ –∏–ª–∏ —Å—Ç–æ–ø")
        print("-"*60)
    
    def _print_goodbye(self):
        """–í—ã–≤–æ–¥–∏—Ç –ø—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
        print("\n–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —á–∞—Ç-–±–æ—Ç–∞.")
        logger.info("üõë –ß–∞—Ç-–±–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    bot = ChatBot()
    bot.run()


if __name__ == "__main__":
    main()